syntax = "proto3";
package upns;

/**
 * \brief A map containing multiple layers, grouping them logically together.
 *
 * The layers of a map share the same coordinate system. If an operation on the map's layers results in a layer,
 * which remains in the same coordinate system, a layer will be added to the originating map (for most operators \sa Operator ).
 * If the layer is not in the same coordinate system, a new mayp will be created.
 */

message Map {
  string name = 1;
  int64 id = 2;

  int64 lastChange = 3; // unix time

  repeated Layer layers = 4;

}

/**
 * \brief Type of binary layerdata saved
 * For each type correspnding wrappers must exist which handle serialization of a layer using \sa LayerDataStreamProvider.
 * Moreover spartial requests must be made possible by such a module \sa LayerData.
 */
enum LayerType {
  POINTCLOUD2 = 0;
  OCTOMAP = 1;
  OPENVDB = 2;
  POSES = 3;
  LAST_PREDEFINED = 4;
}
enum LayerUsageType {
  LASER = 0;
  RADAR = 1;
  NAVIGATION = 2;
  ANNOTATION = 3;
}

message Layer {
  string name = 1;
  int64 id = 2;
  LayerType type = 3;
  LayerUsageType usageType = 4;

}

message Region {
  int64 layerId = 1;

  float minx = 2;
  float maxx = 3;
  float miny = 4;
  float maxy = 5;
  float minz = 6;
  float maxz = 7;
  int32 levelOfDetail = 8;
  bool announce = 9;
  ClipMode clipMode = 10;

  enum ClipMode {
    EXACT = 0;
    SURROUNDING = 1;
  }
}

message RegionData {
  int64 dataSize = 1;
  // Coded Stream if dataSize > 0
}

message ListMapsRequest {}

service MapService {
  rpc ListMaps (ListMapsRequest) returns (stream Map);
}

service LayerService {
  rpc GetRegion ( Region ) returns (stream RegionData);
}
